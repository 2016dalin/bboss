1.实现iohandler
从抽像类org.frameworkset.spi.remote.BaseRPCIOHandler继承
实现抽象方法
protected BaseFutureCall buildBaseFutureCall(RPCMessage srcmsg,
			RPCAddress address) {
2.修改Target.buildTarget()方法：
增加相应的协议目标地址的构建逻辑
3.实现服务程序，例如：RMIRpcService（client，server）
4.实现future发送请求
5.实现请求处理future
6.实现服务请求执行和响应流程
Target
    
    public boolean isRMI()
     public static  boolean isRMI(String potocol)
    public static String buildURL(RPCAddress address)
    public static RPCAddress buildTarget(String url, String protocol)
    private static List<RPCAddress> buildAllTargets_(String _targets_,String protocol)
    public static List<RPCAddress> buildAllTargets(String _targets_,String protocol)
    private List<RPCAddress> buildTargets()
    private List<RPCAddress> buildTargets(String _targets_,String protocol)
    public static String buildWebserviceURL(RPCAddress address)
    public boolean protocol_http()
RPCHelper
 	public Object rpcRMIService(ServiceID serviceID,// 服务标识
            Method method,// 需要在服务上调用的方法
            Object[] parameters // 服务参数
            ,CallContext callContext) throws Throwable
  	public void startServerProtocol(String protocol)
  	public void startRMIServer()
   	public void stopServerProtocol(String protocol)
   	public void stopRMIServer() 
   
     public Object rpcService(ServiceID serviceID,// 服务标识
            Method method,// 需要在服务上调用的方法
            Object[] parameters ,CallContext callContext// 服务参数

    
ApplicationContext    
public static Object getRMIRPCResult(String url, Object ret)

org.frameworkset.spi.remote.Util
	public static RPCIOHandler getRPCIOHandler(String protocol)

ServiceID	
private boolean rpcserviceStarted(Target target)
private boolean isLocalAddress(Target target,boolean fromrest)
 private void setLocalAddress()
 
 扩展cglib时碰到的问题：
 java.lang.Exception
	at org.frameworkset.spi.remote.BaseRPCIOHandler.sendRequest(BaseRPCIOHandler.java:284)
	at org.frameworkset.spi.remote.RPCRequest.execute(RPCRequest.java:304)
	at org.frameworkset.spi.remote.RPCClient.sendMessage(RPCClient.java:266)
	at org.frameworkset.spi.remote.RPCClient.callRemoteMethod(RPCClient.java:135)
	at org.frameworkset.spi.remote.RPCHelper._rpcService(RPCHelper.java:515)
	at org.frameworkset.spi.remote.RPCHelper.rpcRMIService(RPCHelper.java:476)
	at org.frameworkset.spi.remote.RPCHelper.rpcService(RPCHelper.java:184)
	at org.frameworkset.spi.cglib.CGLibUtil.forCreateInf(CGLibUtil.java:128)
	at org.frameworkset.spi.ApplicationContext$1.invoke(ApplicationContext.java:268)
	at $Proxy0.toString(Unknown Source)
	at org.frameworkset.spi.beans.TestBeanContext.testRPCContext(TestBeanContext.java:60)
	at org.frameworkset.spi.beans.TestBeanContext.main(TestBeanContext.java:65)
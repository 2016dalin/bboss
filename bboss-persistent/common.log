[2011-09-07 17:50:15][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-09-07 17:50:15][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-09-07 17:50:17][ERROR][com.frameworkset.util.VelocityUtil] Init velocity failed:velocity.properties (系统找不到指定的文件。) 检查classpath中是否配置正确:D:\workspace\WEB-INF\classes\velocity.properties (系统找不到指定的路径。)
[2011-09-07 17:51:02][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-09-07 17:51:02][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[mysql]:INNER JNDI Name is jdbc/derby-ds
[2011-09-07 17:51:02][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-09-07 17:51:02][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-09-07 17:51:02][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-09-07 17:51:02][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-09-07 17:51:02][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-09-07 17:51:02][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-09-07 17:51:03][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-09-07 17:51:03][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[mysql] Meta Data .
[2011-09-07 17:51:03][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-09-07 17:51:03][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[mysql] tables information.......
[2011-09-07 17:51:03][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-09-07 17:51:04][ERROR][com.frameworkset.util.VelocityUtil] Init velocity failed:velocity.properties (系统找不到指定的文件。) 检查classpath中是否配置正确:D:\workspace\WEB-INF\classes\velocity.properties (系统找不到指定的路径。)
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE) values(?,?,?,?)
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[mysql] start.
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] begin.
[2011-09-07 17:51:04][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] end.
[2011-09-15 11:58:08][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-09-15 11:58:09][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[mysql]:INNER JNDI Name is jdbc/derby-ds
[2011-09-15 11:58:09][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-09-15 11:58:09][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-09-15 11:58:09][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-09-15 11:58:09][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-09-15 11:58:09][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-09-15 11:58:09][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-09-15 11:58:12][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-09-15 11:58:12][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[mysql] Meta Data .
[2011-09-15 11:58:12][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-09-15 11:58:12][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[mysql] tables information.......
[2011-09-15 11:58:13][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2011-09-15 11:58:13][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2011-09-15 11:58:15][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2011-09-15 11:58:15][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2011-09-15 11:58:15][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2011-09-15 11:58:15][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2011-09-15 11:58:15][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-09-15 11:59:08][DEBUG][com.frameworkset.util.VelocityUtil] configurationFile.getAbsolutePath():D:\workspace\WEB-INF\classes\velocity.properties
[2011-09-15 11:59:30][ERROR][com.frameworkset.util.VelocityUtil] Init velocity failed:velocity.properties (系统找不到指定的文件。) 检查classpath中是否配置正确:D:\workspace\WEB-INF\classes\velocity.properties (系统找不到指定的路径。)
java.io.FileNotFoundException: D:\workspace\WEB-INF\classes\velocity.properties (系统找不到指定的路径。)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:106)
	at com.frameworkset.util.VelocityUtil.init(VelocityUtil.java:178)
	at com.frameworkset.util.VelocityUtil.evaluate(VelocityUtil.java:242)
	at com.frameworkset.common.poolman.SQLParams.evaluateSqlTemplate(SQLParams.java:138)
	at com.frameworkset.common.poolman.SQLParams.buildParams(SQLParams.java:184)
	at com.frameworkset.common.poolman.SQLParams.buildParams(SQLParams.java:132)
	at com.frameworkset.common.poolman.PreparedDBUtil.addPreparedBatch(PreparedDBUtil.java:3891)
	at com.frameworkset.common.poolman.SQLExecutor.execute(SQLExecutor.java:380)
	at com.frameworkset.common.poolman.SQLExecutor.execute(SQLExecutor.java:404)
	at com.frameworkset.common.poolman.SQLExecutor.insertBeans(SQLExecutor.java:362)
	at com.frameworkset.sqlexecutor.SimpleApiTest.insertOpera(SimpleApiTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:44)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
[2011-09-15 11:59:31][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-15 11:59:31][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-15 11:59:33][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-15 11:59:33][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-15 11:59:34][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-15 11:59:34][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-15 11:59:39][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-15 11:59:39][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-15 11:59:39][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE) values(?,?,?,?)
[2011-09-15 11:59:39][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[mysql] start.
[2011-09-15 11:59:39][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] begin.
[2011-09-15 11:59:39][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] end.
[2011-09-15 13:29:28][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-09-15 13:29:31][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[mysql]:INNER JNDI Name is jdbc/derby-ds
[2011-09-15 13:29:31][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-09-15 13:29:32][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-09-15 13:29:32][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-09-15 13:29:33][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-09-15 13:29:33][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-09-15 13:29:33][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-09-15 13:29:36][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-09-15 13:29:36][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[mysql] Meta Data .
[2011-09-15 13:29:36][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-09-15 13:29:36][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[mysql] tables information.......
[2011-09-15 13:29:37][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2011-09-15 13:29:37][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2011-09-15 13:29:39][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2011-09-15 13:29:39][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2011-09-15 13:29:39][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2011-09-15 13:29:39][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2011-09-15 13:29:39][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-09-15 13:30:29][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-15 13:30:29][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-15 13:30:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-15 13:30:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-15 13:30:42][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-15 13:30:42][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-15 13:30:43][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-09-15 13:30:43][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-09-15 13:30:43][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE) values(?,?,?,?)
[2011-09-15 13:30:44][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[mysql] start.
[2011-09-15 13:30:44][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] begin.
[2011-09-15 13:30:44][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] end.
[2011-09-29 16:13:28][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-09-29 16:13:29][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[mysql]:INNER JNDI Name is jdbc/derby-ds
[2011-09-29 16:13:29][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-09-29 16:13:30][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-09-29 16:13:30][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-09-29 16:13:30][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-09-29 16:13:30][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-09-29 16:13:30][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-09-29 16:13:32][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-09-29 16:13:32][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[mysql] Meta Data .
[2011-09-29 16:13:32][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-09-29 16:13:32][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[mysql] tables information.......
[2011-09-29 16:13:32][ERROR][com.frameworkset.common.poolman.management.BaseTableManager] Load table infomation failed! Cannot create PoolableConnectionFactory (Failed to start database 'D:/ETL_RESDB/ETL_RESDB', see the next exception for details.). Please check table [tableinfo] in your database! 
[2011-09-29 16:13:32][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-09-29 16:13:32][ERROR][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared sql[select 1] failed:
com.frameworkset.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Failed to start database 'D:/ETL_RESDB/ETL_RESDB', see the next exception for details.)
	at com.frameworkset.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1243)
	at com.frameworkset.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:897)
	at com.frameworkset.common.poolman.sql.PoolManDataSource.getConnection(PoolManDataSource.java:134)
	at com.frameworkset.common.poolman.util.JDBCPool.requestConnection(JDBCPool.java:2190)
	at com.frameworkset.common.poolman.util.SQLManager.requestConnection(SQLManager.java:239)
	at com.frameworkset.common.poolman.StatementInfo.init(StatementInfo.java:157)
	at com.frameworkset.common.poolman.PreparedDBUtil.innerExecute(PreparedDBUtil.java:1163)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePrepared(PreparedDBUtil.java:1675)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePrepared(PreparedDBUtil.java:1017)
	at com.frameworkset.common.poolman.SQLExecutor.queryFieldWithDBName(SQLExecutor.java:989)
	at com.frameworkset.common.poolman.SQLExecutor.queryField(SQLExecutor.java:946)
	at com.frameworkset.sqlexecutor.SimpleApiTest.testETL(SimpleApiTest.java:705)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:44)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.SQLException: Failed to start database 'D:/ETL_RESDB/ETL_RESDB', see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection30.<init>(Unknown Source)
	at org.apache.derby.jdbc.Driver30.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.AutoloadedDriver.connect(Unknown Source)
	at com.frameworkset.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at com.frameworkset.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:295)
	at com.frameworkset.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1275)
	at com.frameworkset.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1239)
	... 35 more
Caused by: java.sql.SQLException: Database at D:\ETL_RESDB\ETL_RESDB has an incompatible format with the current version of the software.  The database was created by or upgraded by version 10.6.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	... 45 more
Caused by: ERROR XSLAN: Database at D:\ETL_RESDB\ETL_RESDB has an incompatible format with the current version of the software.  The database was created by or upgraded by version 10.6.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.store.raw.log.LogToFile.readControlFile(Unknown Source)
	at org.apache.derby.impl.store.raw.log.LogToFile.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.bootLogFactory(Unknown Source)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.setRawStoreFactory(Unknown Source)
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)
	... 45 more
[2011-09-29 16:13:32][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[mysql] start.
[2011-09-29 16:13:32][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] begin.
[2011-09-29 16:13:32][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] end.
[2011-09-29 16:16:57][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-09-29 16:16:57][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[mysql]:INNER JNDI Name is jdbc/derby-ds
[2011-09-29 16:16:57][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-09-29 16:16:57][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-09-29 16:16:57][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-09-29 16:16:57][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-09-29 16:16:57][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-09-29 16:16:57][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-09-29 16:16:58][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-09-29 16:16:58][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[mysql] Meta Data .
[2011-09-29 16:16:58][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-09-29 16:16:58][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[mysql] tables information.......
[2011-09-29 16:16:58][ERROR][com.frameworkset.common.poolman.management.BaseTableManager] Load table infomation failed! Cannot create PoolableConnectionFactory (Failed to start database 'D:/workspace/CreatorETL-3.0/bin/embedded/ETL_RESDB1', see the next exception for details.). Please check table [tableinfo] in your database! 
[2011-09-29 16:16:58][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-09-29 16:16:58][ERROR][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared sql[select 1] failed:
com.frameworkset.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Failed to start database 'D:/workspace/CreatorETL-3.0/bin/embedded/ETL_RESDB1', see the next exception for details.)
	at com.frameworkset.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1243)
	at com.frameworkset.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:897)
	at com.frameworkset.common.poolman.sql.PoolManDataSource.getConnection(PoolManDataSource.java:134)
	at com.frameworkset.common.poolman.util.JDBCPool.requestConnection(JDBCPool.java:2190)
	at com.frameworkset.common.poolman.util.SQLManager.requestConnection(SQLManager.java:239)
	at com.frameworkset.common.poolman.StatementInfo.init(StatementInfo.java:157)
	at com.frameworkset.common.poolman.PreparedDBUtil.innerExecute(PreparedDBUtil.java:1163)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePrepared(PreparedDBUtil.java:1675)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePrepared(PreparedDBUtil.java:1017)
	at com.frameworkset.common.poolman.SQLExecutor.queryFieldWithDBName(SQLExecutor.java:989)
	at com.frameworkset.common.poolman.SQLExecutor.queryField(SQLExecutor.java:946)
	at com.frameworkset.sqlexecutor.SimpleApiTest.testETL(SimpleApiTest.java:705)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:44)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.SQLException: Failed to start database 'D:/workspace/CreatorETL-3.0/bin/embedded/ETL_RESDB1', see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection30.<init>(Unknown Source)
	at org.apache.derby.jdbc.Driver30.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.AutoloadedDriver.connect(Unknown Source)
	at com.frameworkset.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at com.frameworkset.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:295)
	at com.frameworkset.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1275)
	at com.frameworkset.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1239)
	... 35 more
Caused by: java.sql.SQLException: Database at D:\workspace\CreatorETL-3.0\bin\embedded\ETL_RESDB1 has an incompatible format with the current version of the software.  The database was created by or upgraded by version 10.6.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	... 45 more
Caused by: ERROR XSLAN: Database at D:\workspace\CreatorETL-3.0\bin\embedded\ETL_RESDB1 has an incompatible format with the current version of the software.  The database was created by or upgraded by version 10.6.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.store.raw.log.LogToFile.readControlFile(Unknown Source)
	at org.apache.derby.impl.store.raw.log.LogToFile.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.bootLogFactory(Unknown Source)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.setRawStoreFactory(Unknown Source)
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)
	... 45 more
[2011-09-29 16:16:58][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[mysql] start.
[2011-09-29 16:16:58][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] begin.
[2011-09-29 16:16:58][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] end.
[2011-09-29 16:18:31][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-09-29 16:18:31][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[mysql]:INNER JNDI Name is jdbc/derby-ds
[2011-09-29 16:18:31][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-09-29 16:18:31][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-09-29 16:18:31][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-09-29 16:18:31][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-09-29 16:18:31][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-09-29 16:18:31][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-09-29 16:18:33][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-09-29 16:18:33][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[mysql] Meta Data .
[2011-09-29 16:18:33][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-09-29 16:18:33][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[mysql] tables information.......
[2011-09-29 16:18:33][ERROR][com.frameworkset.common.poolman.management.BaseTableManager] Load table infomation failed! Table/View 'TABLEINFO' does not exist.. Please check table [tableinfo] in your database! 
[2011-09-29 16:18:33][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-09-29 16:18:34][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select 1
[2011-09-29 16:18:34][ERROR][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared sql[select 1] failed:
java.sql.SQLException: Syntax error: Encountered "<EOF>" at line 1, column 8.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.<init>(Unknown Source)
	at org.apache.derby.jdbc.Driver30.newEmbedPreparedStatement(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)
	at com.frameworkset.commons.dbcp.DelegatingConnection.prepareStatement(DelegatingConnection.java:263)
	at com.frameworkset.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.prepareStatement(PoolingDataSource.java:307)
	at com.frameworkset.common.poolman.StatementInfo.prepareStatement(StatementInfo.java:189)
	at com.frameworkset.common.poolman.PreparedDBUtil.innerExecute(PreparedDBUtil.java:1309)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePrepared(PreparedDBUtil.java:1675)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePrepared(PreparedDBUtil.java:1017)
	at com.frameworkset.common.poolman.SQLExecutor.queryFieldWithDBName(SQLExecutor.java:989)
	at com.frameworkset.common.poolman.SQLExecutor.queryField(SQLExecutor.java:946)
	at com.frameworkset.sqlexecutor.SimpleApiTest.testETL(SimpleApiTest.java:705)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:44)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: ERROR 42X01: Syntax error: Encountered "<EOF>" at line 1, column 8.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.sql.compile.ParserImpl.parseStatement(Unknown Source)
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)
	... 39 more
[2011-09-29 16:18:34][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[mysql] start.
[2011-09-29 16:18:34][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] begin.
[2011-09-29 16:18:34][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] end.
[2011-09-29 16:21:21][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-09-29 16:21:22][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[mysql]:INNER JNDI Name is jdbc/derby-ds
[2011-09-29 16:21:22][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-09-29 16:21:22][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-09-29 16:21:22][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-09-29 16:21:22][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-09-29 16:21:22][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-09-29 16:21:22][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-09-29 16:21:22][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-09-29 16:21:22][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[mysql] Meta Data .
[2011-09-29 16:21:22][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-09-29 16:21:22][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[mysql] tables information.......
[2011-09-29 16:21:23][ERROR][com.frameworkset.common.poolman.management.BaseTableManager] Load table infomation failed! Table/View 'TABLEINFO' does not exist.. Please check table [tableinfo] in your database! 
[2011-09-29 16:21:23][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-09-29 16:21:23][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select 1 from r_cluster
[2011-09-29 16:21:23][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[mysql] start.
[2011-09-29 16:21:23][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] begin.
[2011-09-29 16:21:23][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] end.
[2012-01-04 23:04:22][INFO][org.frameworkset.spi.assemble.ProviderParser] 解析报文时遇到元素[properties]，忽略处理。
[2012-01-04 23:04:22][INFO][com.frameworkset.util.DaemonThread] Start check files is changed or not.if some files is changed,the resources of these files will be refreshed use ResourceInit interface.
[2012-01-04 23:04:23][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2012-01-04 23:04:24][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[mysql]:INNER JNDI Name is jdbc/derby-ds
[2012-01-04 23:04:24][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2012-01-04 23:04:24][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2012-01-04 23:04:24][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2012-01-04 23:04:24][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2012-01-04 23:04:24][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2012-01-04 23:04:24][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2012-01-04 23:04:27][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2012-01-04 23:04:27][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[mysql] Meta Data .
[2012-01-04 23:04:27][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2012-01-04 23:04:27][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[mysql] tables information.......
[2012-01-04 23:04:28][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2012-01-04 23:04:28][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2012-01-04 23:04:29][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2012-01-04 23:04:29][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2012-01-04 23:04:29][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2012-01-04 23:04:29][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2012-01-04 23:04:29][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2012-01-04 23:04:29][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2012-01-04 23:04:29][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2012-01-04 23:04:29][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2012-01-04 23:04:29][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2012-01-04 23:04:29][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2012-01-04 23:04:29][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2012-01-04 23:04:29][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2012-01-04 23:04:29][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2012-01-04 23:04:29][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2012-01-04 23:04:29][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[mysql] start.
[2012-01-04 23:04:29][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] begin.
[2012-01-04 23:04:29][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=mysql] end.
[2012-01-04 23:05:50][INFO][org.frameworkset.spi.assemble.ProviderParser] 解析报文时遇到元素[properties]，忽略处理。
[2012-01-04 23:05:50][INFO][com.frameworkset.util.DaemonThread] Start check files is changed or not.if some files is changed,the resources of these files will be refreshed use ResourceInit interface.
[2012-01-04 23:05:50][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2012-01-04 23:05:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[bspf]:INNER JNDI Name is jdbc/derby-ds
[2012-01-04 23:05:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2012-01-04 23:05:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2012-01-04 23:05:50][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2012-01-04 23:05:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2012-01-04 23:05:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2012-01-04 23:05:50][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2012-01-04 23:05:51][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2012-01-04 23:05:51][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[bspf] Meta Data .
[2012-01-04 23:05:51][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2012-01-04 23:05:51][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[bspf] tables information.......
[2012-01-04 23:05:51][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2012-01-04 23:05:51][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2012-01-04 23:05:52][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2012-01-04 23:05:52][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2012-01-04 23:05:52][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2012-01-04 23:05:52][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2012-01-04 23:05:52][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2012-01-04 23:05:52][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select * from LISTBEAN
	
[2012-01-04 23:05:52][DEBUG][com.frameworkset.util.VelocityUtil] FileUtil.apppath:D:\workspace
[2012-01-04 23:05:52][DEBUG][com.frameworkset.util.VelocityUtil] velocity.properties:file:/D:/workspace/bbossgroups-3.5/bboss-persistent/classes/velocity.properties
[2012-01-04 23:05:52][DEBUG][com.frameworkset.util.VelocityUtil] file.resource.loader.path:D:\workspace/WEB-INF/templates
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2012-01-04 23:05:53][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:05:53][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2012-01-04 23:05:53][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:05:53][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2012-01-04 23:05:53][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:05:53][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2012-01-04 23:05:53][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:05:53][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate mysql. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to mysql
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[bspf] start.
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] begin.
[2012-01-04 23:05:53][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] end.
[2012-01-04 23:06:14][INFO][org.frameworkset.spi.assemble.ProviderParser] 解析报文时遇到元素[properties]，忽略处理。
[2012-01-04 23:06:14][INFO][com.frameworkset.util.DaemonThread] Start check files is changed or not.if some files is changed,the resources of these files will be refreshed use ResourceInit interface.
[2012-01-04 23:06:14][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2012-01-04 23:06:14][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[bspf]:INNER JNDI Name is jdbc/derby-ds
[2012-01-04 23:06:14][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2012-01-04 23:06:14][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2012-01-04 23:06:14][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2012-01-04 23:06:14][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2012-01-04 23:06:14][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2012-01-04 23:06:14][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2012-01-04 23:06:15][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2012-01-04 23:06:15][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[bspf] Meta Data .
[2012-01-04 23:06:15][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2012-01-04 23:06:15][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[bspf] tables information.......
[2012-01-04 23:06:15][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2012-01-04 23:06:15][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select * from LISTBEAN
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.util.VelocityUtil] FileUtil.apppath:D:\workspace
[2012-01-04 23:06:16][DEBUG][com.frameworkset.util.VelocityUtil] velocity.properties:file:/D:/workspace/bbossgroups-3.5/bboss-persistent/classes/velocity.properties
[2012-01-04 23:06:16][DEBUG][com.frameworkset.util.VelocityUtil] file.resource.loader.path:D:\workspace/WEB-INF/templates
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2012-01-04 23:06:16][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:06:16][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2012-01-04 23:06:16][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:06:16][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2012-01-04 23:06:16][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:06:16][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2012-01-04 23:06:16][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:06:16][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=0,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[bspf] start.
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] begin.
[2012-01-04 23:06:16][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] end.
[2012-01-05 11:15:47][INFO][org.frameworkset.spi.assemble.ProviderParser] 解析报文时遇到元素[properties]，忽略处理。
[2012-01-05 11:15:47][INFO][com.frameworkset.util.DaemonThread] Start check files is changed or not.if some files is changed,the resources of these files will be refreshed use ResourceInit interface.
[2012-01-05 11:15:47][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2012-01-05 11:15:48][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[bspf]:INNER JNDI Name is jdbc/derby-ds
[2012-01-05 11:15:48][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2012-01-05 11:15:48][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2012-01-05 11:15:48][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2012-01-05 11:15:48][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2012-01-05 11:15:48][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2012-01-05 11:15:48][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2012-01-05 11:15:51][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2012-01-05 11:15:51][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[bspf] Meta Data .
[2012-01-05 11:15:51][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2012-01-05 11:15:51][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[bspf] tables information.......
[2012-01-05 11:15:52][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2012-01-05 11:15:52][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2012-01-05 11:15:52][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2012-01-05 11:15:52][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2012-01-05 11:15:52][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2012-01-05 11:15:53][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2012-01-05 11:15:53][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2012-01-05 11:15:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select * from LISTBEAN
	
[2012-01-05 11:15:53][DEBUG][com.frameworkset.util.VelocityUtil] FileUtil.apppath:D:\workspace
[2012-01-05 11:15:53][DEBUG][com.frameworkset.util.VelocityUtil] velocity.properties:file:/D:/workspace/bbossgroups-3.5/bboss-persistent/classes/velocity.properties
[2012-01-05 11:15:53][DEBUG][com.frameworkset.util.VelocityUtil] file.resource.loader.path:D:\workspace/WEB-INF/templates
[2012-01-05 11:15:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2012-01-05 11:15:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2012-01-05 11:15:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2012-01-05 11:15:53][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:15:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:15:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2012-01-05 11:15:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:15:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2012-01-05 11:15:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:15:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2012-01-05 11:15:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:15:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=0,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[bspf] start.
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] begin.
[2012-01-05 11:15:54][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] end.
[2012-01-05 11:16:29][INFO][org.frameworkset.spi.assemble.ProviderParser] 解析报文时遇到元素[properties]，忽略处理。
[2012-01-05 11:16:29][INFO][com.frameworkset.util.DaemonThread] Start check files is changed or not.if some files is changed,the resources of these files will be refreshed use ResourceInit interface.
[2012-01-05 11:16:29][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2012-01-05 11:16:29][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[bspf]:INNER JNDI Name is jdbc/derby-ds
[2012-01-05 11:16:29][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2012-01-05 11:16:29][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2012-01-05 11:16:29][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2012-01-05 11:16:29][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2012-01-05 11:16:29][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2012-01-05 11:16:29][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2012-01-05 11:16:30][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2012-01-05 11:16:30][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[bspf] Meta Data .
[2012-01-05 11:16:30][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2012-01-05 11:16:30][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[bspf] tables information.......
[2012-01-05 11:16:31][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2012-01-05 11:16:31][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2012-01-05 11:16:33][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2012-01-05 11:16:33][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2012-01-05 11:16:33][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2012-01-05 11:16:33][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2012-01-05 11:16:33][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2012-01-05 11:16:33][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select * from LISTBEAN
	
[2012-01-05 11:16:44][DEBUG][com.frameworkset.util.VelocityUtil] FileUtil.apppath:D:\workspace
[2012-01-05 11:16:44][DEBUG][com.frameworkset.util.VelocityUtil] velocity.properties:file:/D:/workspace/bbossgroups-3.5/bboss-persistent/classes/velocity.properties
[2012-01-05 11:16:44][DEBUG][com.frameworkset.util.VelocityUtil] file.resource.loader.path:D:\workspace/WEB-INF/templates
[2012-01-05 11:16:45][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2012-01-05 11:16:45][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2012-01-05 11:16:45][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2012-01-05 11:16:45][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:16:45][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:16:45][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:16:45][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:16:45][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2012-01-05 11:16:45][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:16:45][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:16:45][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:16:45][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:16:45][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2012-01-05 11:16:45][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:16:45][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:16:45][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:16:45][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2012-01-05 11:16:59][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:16:59][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=0,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[bspf] start.
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] begin.
[2012-01-05 11:16:59][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] end.
[2011-12-25 14:17:07][INFO][com.frameworkset.util.DaemonThread] Start check files is changed or not.if some files is changed,the resources of these files will be refreshed use ResourceInit interface.
[2011-12-25 14:17:07][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-12-25 14:17:08][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[bspf]:INNER JNDI Name is bspf_datasource_jndiname
[2011-12-25 14:17:08][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:oracle.jdbc.driver.OracleDriver
[2011-12-25 14:17:09][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-12-25 14:17:09][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : bspf_datasource_jndiname
[2011-12-25 14:17:09][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: bspf_datasource_jndiname
[2011-12-25 14:17:09][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: bspf_datasource_jndiname
[2011-12-25 14:17:09][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[bspf_datasource_jndiname]
[2011-12-25 14:17:30][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=true
[2011-12-25 14:17:30][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database[bspf] Meta Data beginning.....
[2011-12-25 14:18:12][INFO][com.frameworkset.util.DaemonThread] Start check files is changed or not.if some files is changed,the resources of these files will be refreshed use ResourceInit interface.
[2011-12-25 14:18:12][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-12-25 14:18:13][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[cim]:INNER JNDI Name is jdbc/derby-ds
[2011-12-25 14:18:13][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-12-25 14:18:13][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-12-25 14:18:13][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-12-25 14:18:13][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-12-25 14:18:13][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-12-25 14:18:13][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-12-25 14:18:17][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-12-25 14:18:17][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[cim] Meta Data .
[2011-12-25 14:18:17][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-12-25 14:18:17][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[cim] tables information.......
[2011-12-25 14:18:19][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2011-12-25 14:18:19][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2011-12-25 14:18:20][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2011-12-25 14:18:20][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2011-12-25 14:18:20][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2011-12-25 14:18:20][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2011-12-25 14:18:20][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-12-25 14:18:20][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2011-12-25 14:18:20][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2011-12-25 14:18:20][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2011-12-25 14:18:20][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2011-12-25 14:18:20][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2011-12-25 14:18:20][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2011-12-25 14:18:20][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2011-12-25 14:18:20][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2011-12-25 14:18:20][INFO][com.frameworkset.common.poolman.util.PoolManager] ERROR: Could not locate bspf. This usually means that the poolman.xml file could not be found, or that it does not contain configuration data for a pool with a name equal to bspf
[2011-12-25 14:18:20][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[cim] start.
[2011-12-25 14:18:20][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=cim] begin.
[2011-12-25 14:18:20][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=cim] end.
[2011-12-25 14:18:49][INFO][com.frameworkset.util.DaemonThread] Start check files is changed or not.if some files is changed,the resources of these files will be refreshed use ResourceInit interface.
[2011-12-25 14:18:49][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-12-25 14:18:49][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[bspf]:INNER JNDI Name is jdbc/derby-ds
[2011-12-25 14:18:49][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-12-25 14:18:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-12-25 14:18:50][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-12-25 14:18:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-12-25 14:18:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-12-25 14:18:50][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-12-25 14:18:51][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-12-25 14:18:51][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[bspf] Meta Data .
[2011-12-25 14:18:51][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-12-25 14:18:51][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[bspf] tables information.......
[2011-12-25 14:18:52][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2011-12-25 14:18:52][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2011-12-25 14:18:53][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2011-12-25 14:18:53][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2011-12-25 14:18:53][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2011-12-25 14:18:53][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2011-12-25 14:18:53][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-12-25 14:18:53][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select * from LISTBEAN
	
[2011-12-25 14:18:54][DEBUG][com.frameworkset.util.VelocityUtil] FileUtil.apppath:D:\workspace
[2011-12-25 14:18:54][DEBUG][com.frameworkset.util.VelocityUtil] velocity.properties:file:/D:/workspace/bbossgroups-3.5/bboss-persistent/classes/velocity.properties
[2011-12-25 14:18:54][DEBUG][com.frameworkset.util.VelocityUtil] file.resource.loader.path:D:\workspace/WEB-INF/templates
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2011-12-25 14:18:55][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:18:55][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2011-12-25 14:18:55][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:18:55][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2011-12-25 14:18:55][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:18:55][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2011-12-25 14:18:55][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:18:55][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=0,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[bspf] start.
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] begin.
[2011-12-25 14:18:55][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] end.
[2011-12-25 14:22:08][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-12-25 14:22:08][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[bspf]:INNER JNDI Name is jdbc/derby-ds
[2011-12-25 14:22:08][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-12-25 14:22:08][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-12-25 14:22:08][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-12-25 14:22:08][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-12-25 14:22:08][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-12-25 14:22:08][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-12-25 14:22:09][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-12-25 14:22:09][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[bspf] Meta Data .
[2011-12-25 14:22:09][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-12-25 14:22:09][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[bspf] tables information.......
[2011-12-25 14:22:10][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2011-12-25 14:22:10][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2011-12-25 14:22:11][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2011-12-25 14:22:11][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2011-12-25 14:22:11][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2011-12-25 14:22:11][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2011-12-25 14:22:11][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-12-25 14:22:11][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[bspf] start.
[2011-12-25 14:22:11][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] begin.
[2011-12-25 14:22:11][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] end.
[2011-12-25 14:23:20][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-12-25 14:23:20][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[bspf]:INNER JNDI Name is jdbc/derby-ds
[2011-12-25 14:23:20][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-12-25 14:23:20][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-12-25 14:23:20][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-12-25 14:23:20][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-12-25 14:23:20][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-12-25 14:23:20][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-12-25 14:23:22][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-12-25 14:23:22][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[bspf] Meta Data .
[2011-12-25 14:23:22][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-12-25 14:23:22][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[bspf] tables information.......
[2011-12-25 14:23:23][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2011-12-25 14:23:23][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2011-12-25 14:23:24][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2011-12-25 14:23:24][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2011-12-25 14:23:24][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2011-12-25 14:23:24][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2011-12-25 14:23:24][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-12-25 14:23:24][DEBUG][com.frameworkset.util.VelocityUtil] FileUtil.apppath:D:\workspace
[2011-12-25 14:23:24][DEBUG][com.frameworkset.util.VelocityUtil] velocity.properties:file:/D:/workspace/bbossgroups-3.5/bboss-persistent/classes/velocity.properties
[2011-12-25 14:23:24][DEBUG][com.frameworkset.util.VelocityUtil] file.resource.loader.path:D:\workspace/WEB-INF/templates
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE,SORTORDER,ISPRIMARYKEY,REQUIRED,FIELDLENGTH,ISVALIDATED) values(?,?,?,?,?,?,?,?,?)] success:0:1
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared statement:insert into LISTBEAN(ID,FIELDNAME,FIELDLABLE,FIELDTYPE) values(?,?,?,?)
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[bspf] start.
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] begin.
[2011-12-25 14:23:25][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] end.
[2011-12-25 14:23:50][INFO][com.frameworkset.util.DaemonThread] Start check files is changed or not.if some files is changed,the resources of these files will be refreshed use ResourceInit interface.
[2011-12-25 14:23:50][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-12-25 14:23:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[bspf]:INNER JNDI Name is jdbc/derby-ds
[2011-12-25 14:23:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-12-25 14:23:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-12-25 14:23:50][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-12-25 14:23:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-12-25 14:23:50][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-12-25 14:23:50][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-12-25 14:23:52][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-12-25 14:23:52][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[bspf] Meta Data .
[2011-12-25 14:23:52][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-12-25 14:23:52][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[bspf] tables information.......
[2011-12-25 14:23:53][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2011-12-25 14:23:53][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2011-12-25 14:23:53][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2011-12-25 14:23:53][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2011-12-25 14:23:53][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2011-12-25 14:23:53][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select * from LISTBEAN
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.util.VelocityUtil] FileUtil.apppath:D:\workspace
[2011-12-25 14:23:54][DEBUG][com.frameworkset.util.VelocityUtil] velocity.properties:file:/D:/workspace/bbossgroups-3.5/bboss-persistent/classes/velocity.properties
[2011-12-25 14:23:54][DEBUG][com.frameworkset.util.VelocityUtil] file.resource.loader.path:D:\workspace/WEB-INF/templates
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2011-12-25 14:23:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:23:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2011-12-25 14:23:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:23:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2011-12-25 14:23:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:23:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2011-12-25 14:23:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:23:54][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=0,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[bspf] start.
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] begin.
[2011-12-25 14:23:54][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] end.
[2011-12-25 14:24:36][DEBUG][com.frameworkset.common.poolman.management.PoolManBootstrap] PoolManBootstrap(configFile): poolman.xml
[2011-12-25 14:24:36][INFO][com.frameworkset.util.DaemonThread] Start check files is changed or not.if some files is changed,the resources of these files will be refreshed use ResourceInit interface.
[2011-12-25 14:24:37][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] JDBCPool[bspf]:INNER JNDI Name is jdbc/derby-ds
[2011-12-25 14:24:37][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Init DBAdapter from driver:org.apache.derby.jdbc.EmbeddedDriver
[2011-12-25 14:24:37][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bind the DataSource view of this pool to JNDI
[2011-12-25 14:24:37][INFO][com.frameworkset.common.poolman.util.JDBCPool] Intial Context : jdbc/derby-ds
[2011-12-25 14:24:37][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] binding: jdbc/derby-ds
[2011-12-25 14:24:37][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Bound name: jdbc/derby-ds
[2011-12-25 14:24:37][INFO][com.frameworkset.common.poolman.util.JDBCPool] DataSource bound to JNDI under name[jdbc/derby-ds]
[2011-12-25 14:24:39][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Load Database Meta Data=false
[2011-12-25 14:24:39][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Ignore Load Database[bspf] Meta Data .
[2011-12-25 14:24:39][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo start.......
[2011-12-25 14:24:39][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] load pool[bspf] tables information.......
[2011-12-25 14:24:39][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_DATACACHE] information.......
[2011-12-25 14:24:40][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_DATACACHE]'s metadata.
[2011-12-25 14:24:40][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[CIM_ETL_REPOSITORY] information.......
[2011-12-25 14:24:40][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] load table[CIM_ETL_REPOSITORY]'s metadata.
[2011-12-25 14:24:40][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[TB_USER] information.......
[2011-12-25 14:24:40][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager]     load table[LISTBEAN] information.......
[2011-12-25 14:24:40][DEBUG][com.frameworkset.common.poolman.management.BaseTableManager] initial tableinfo complete!
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select * from LISTBEAN
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.util.VelocityUtil] FileUtil.apppath:D:\workspace
[2011-12-25 14:24:41][DEBUG][com.frameworkset.util.VelocityUtil] velocity.properties:file:/D:/workspace/bbossgroups-3.5/bboss-persistent/classes/velocity.properties
[2011-12-25 14:24:41][DEBUG][com.frameworkset.util.VelocityUtil] file.resource.loader.path:D:\workspace/WEB-INF/templates
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select FIELDNAME from LISTBEAN where FIELDNAME=?
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2011-12-25 14:24:41][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:24:41][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and FIELDNAME = ? 	
[2011-12-25 14:24:41][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=,dataformat=null,method=setString(int, String)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:24:41][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2011-12-25 14:24:41][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:24:41][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=isvalidated,index=0,value=0,dataformat=null,method=setInt(int, int)][name=sortorder,index=0,value=12,dataformat=null,method=setNull(int, int)][name=required,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)][name=fieldType,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldLable,index=0,value=12,dataformat=null,method=setNull(int, int)][name=fieldName,index=0,value=12,dataformat=null,method=setNull(int, int)][name=id,index=0,value=0,dataformat=null,method=setInt(int, int)][name=fieldLength,index=0,value=0,dataformat=null,method=setInt(int, int)][name=isprimaryKey,index=0,value=false,dataformat=null,method=setBoolean(int, boolean)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
					 and id = ? 	
[2011-12-25 14:24:41][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=-1,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:24:41][INFO][com.frameworkset.common.poolman.SQLParams] 预编译sql语句提示：指定了预编译参数,sql语句中没有包含符合要求的预编译变量，sql{select *  from LISTBEAN  where 1=1 
						},params{[name=id,index=0,value=0,dataformat=null,method=setInt(int, int)]},action{unkown action},Variable identity{pretoken=#\[,endtoken=\]}
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select *  from LISTBEAN  where 1=1 
						
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared update statement:select count(1)  from LISTBEAN 
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute JDBC prepared batch statement:update LISTBEAN  set FIELDNAME = ? where id = ? 
	
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared Batch sql[update LISTBEAN  set FIELDNAME = ? where id = ? 
	] success:0:0,1:0,2:0
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.util.JDBCPool] Shutdown poolman[bspf] start.
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] begin.
[2011-12-25 14:24:41][DEBUG][com.frameworkset.common.poolman.sql.PoolManDataSource] Close  datasource[jndiName=jdbc/derby-ds,dbname=bspf] end.
[2011-12-27 14:20:01][ERROR][com.frameworkset.common.poolman.PreparedDBUtil] Execuete batch prepared Error:Syntax error: Encountered "info" at line 1, column 8.
java.sql.SQLException: Syntax error: Encountered "info" at line 1, column 8.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.<init>(Unknown Source)
	at org.apache.derby.jdbc.Driver30.newEmbedPreparedStatement(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)
	at com.frameworkset.commons.dbcp.DelegatingConnection.prepareStatement(DelegatingConnection.java:263)
	at com.frameworkset.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.prepareStatement(PoolingDataSource.java:307)
	at com.frameworkset.common.poolman.StatementInfo.prepareStatement(StatementInfo.java:204)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePreparedBatch(PreparedDBUtil.java:4064)
	at com.frameworkset.common.poolman.SQLExecutor.execute(SQLExecutor.java:381)
	at com.frameworkset.common.poolman.SQLExecutor.execute(SQLExecutor.java:404)
	at com.frameworkset.common.poolman.SQLExecutor.insertBeans(SQLExecutor.java:362)
	at com.frameworkset.common.poolman.SQLExecutor.insertBean(SQLExecutor.java:674)
	at com.frameworkset.common.TestLob.testNew(TestLob.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:44)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: ERROR 42X01: Syntax error: Encountered "info" at line 1, column 8.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.sql.compile.ParserImpl.parseStatement(Unknown Source)
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source)
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source)
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source)
	... 39 more
[2011-12-27 14:26:02][ERROR][com.frameworkset.common.poolman.management.BaseTableManager] Load table infomation failed! Cannot create PoolableConnectionFactory (Failed to start database 'D:/workspace/bbossgroups-3.5/bboss-mvc/database/cimdb' with class loader sun.misc.Launcher$AppClassLoader@7259da, see the next exception for details.). Please check table [tableinfo] in your database! 
[2011-12-27 14:26:02][ERROR][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared sql[select * from test] failed:
com.frameworkset.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Failed to start database 'D:/workspace/bbossgroups-3.5/bboss-mvc/database/cimdb' with class loader sun.misc.Launcher$AppClassLoader@7259da, see the next exception for details.)
	at com.frameworkset.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1243)
	at com.frameworkset.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:897)
	at com.frameworkset.common.poolman.sql.PoolManDataSource.getConnection(PoolManDataSource.java:134)
	at com.frameworkset.common.poolman.util.JDBCPool.requestConnection(JDBCPool.java:2190)
	at com.frameworkset.common.poolman.util.SQLManager.requestConnection(SQLManager.java:239)
	at com.frameworkset.common.poolman.StatementInfo.init(StatementInfo.java:160)
	at com.frameworkset.common.poolman.PreparedDBUtil.innerExecute(PreparedDBUtil.java:1217)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePreparedForObject(PreparedDBUtil.java:1167)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePreparedForObject(PreparedDBUtil.java:1103)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePreparedForObject(PreparedDBUtil.java:1078)
	at com.frameworkset.common.poolman.SQLExecutor.queryObjectWithDBName(SQLExecutor.java:776)
	at com.frameworkset.common.poolman.SQLExecutor.queryObject(SQLExecutor.java:735)
	at com.frameworkset.common.TestLob.testNewOrMappingQuery(TestLob.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:44)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.SQLException: Failed to start database 'D:/workspace/bbossgroups-3.5/bboss-mvc/database/cimdb' with class loader sun.misc.Launcher$AppClassLoader@7259da, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection30.<init>(Unknown Source)
	at org.apache.derby.jdbc.Driver30.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.AutoloadedDriver.connect(Unknown Source)
	at com.frameworkset.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at com.frameworkset.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:295)
	at com.frameworkset.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1275)
	at com.frameworkset.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1239)
	... 36 more
Caused by: java.sql.SQLException: Another instance of Derby may have already booted the database D:\workspace\bbossgroups-3.5\bboss-mvc\database\cimdb.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	... 46 more
Caused by: ERROR XSDB6: Another instance of Derby may have already booted the database D:\workspace\bbossgroups-3.5\bboss-mvc\database\cimdb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)
	... 46 more
[2011-12-27 14:26:19][ERROR][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared sql[select * from test] failed:
com.frameworkset.common.poolman.NestedSQLException
	at com.frameworkset.common.poolman.ResultMap.buildValueObject(ResultMap.java:203)
	at com.frameworkset.common.poolman.StatementInfo.buildResultMap(StatementInfo.java:786)
	at com.frameworkset.common.poolman.PreparedDBUtil.doPrepareSelectCommon(PreparedDBUtil.java:1862)
	at com.frameworkset.common.poolman.PreparedDBUtil.innerExecute(PreparedDBUtil.java:1411)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePreparedForObject(PreparedDBUtil.java:1167)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePreparedForObject(PreparedDBUtil.java:1103)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePreparedForObject(PreparedDBUtil.java:1078)
	at com.frameworkset.common.poolman.SQLExecutor.queryObjectWithDBName(SQLExecutor.java:776)
	at com.frameworkset.common.poolman.SQLExecutor.queryObject(SQLExecutor.java:735)
	at com.frameworkset.common.TestLob.testNewOrMappingQuery(TestLob.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:44)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.lang.IllegalAccessException: Class com.frameworkset.common.poolman.ResultMap can not access a member of class com.frameworkset.common.TestLob$LobBean with modifiers ""
	at sun.reflect.Reflection.ensureMemberAccess(Reflection.java:65)
	at java.lang.Class.newInstance0(Class.java:344)
	at java.lang.Class.newInstance(Class.java:303)
	at com.frameworkset.common.poolman.ResultMap.buildValueObject(ResultMap.java:199)
	... 33 more
[2011-12-27 14:41:47][ERROR][com.frameworkset.common.poolman.management.BaseTableManager] Load table infomation failed! Cannot create PoolableConnectionFactory (Failed to start database 'D:/workspace/bbossgroups-3.5/bboss-mvc/database/cimdb' with class loader sun.misc.Launcher$AppClassLoader@7259da, see the next exception for details.). Please check table [tableinfo] in your database! 
[2011-12-27 14:41:47][ERROR][com.frameworkset.common.poolman.PreparedDBUtil] Execute prepared sql[select * from test] failed:
com.frameworkset.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Failed to start database 'D:/workspace/bbossgroups-3.5/bboss-mvc/database/cimdb' with class loader sun.misc.Launcher$AppClassLoader@7259da, see the next exception for details.)
	at com.frameworkset.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1243)
	at com.frameworkset.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:897)
	at com.frameworkset.common.poolman.sql.PoolManDataSource.getConnection(PoolManDataSource.java:134)
	at com.frameworkset.common.poolman.util.JDBCPool.requestConnection(JDBCPool.java:2190)
	at com.frameworkset.common.poolman.util.SQLManager.requestConnection(SQLManager.java:239)
	at com.frameworkset.common.poolman.StatementInfo.init(StatementInfo.java:160)
	at com.frameworkset.common.poolman.PreparedDBUtil.innerExecute(PreparedDBUtil.java:1217)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePreparedForList(PreparedDBUtil.java:1186)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePreparedForList(PreparedDBUtil.java:1115)
	at com.frameworkset.common.poolman.PreparedDBUtil.executePreparedForList(PreparedDBUtil.java:1090)
	at com.frameworkset.common.poolman.SQLExecutor.queryListWithDBName(SQLExecutor.java:757)
	at com.frameworkset.common.poolman.SQLExecutor.queryList(SQLExecutor.java:702)
	at com.frameworkset.common.TestLob.testNewOrMappingsQuery(TestLob.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:44)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)
	at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:220)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.sql.SQLException: Failed to start database 'D:/workspace/bbossgroups-3.5/bboss-mvc/database/cimdb' with class loader sun.misc.Launcher$AppClassLoader@7259da, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection30.<init>(Unknown Source)
	at org.apache.derby.jdbc.Driver30.getNewEmbedConnection(Unknown Source)
	at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)
	at org.apache.derby.jdbc.AutoloadedDriver.connect(Unknown Source)
	at com.frameworkset.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at com.frameworkset.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:295)
	at com.frameworkset.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1275)
	at com.frameworkset.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1239)
	... 36 more
Caused by: java.sql.SQLException: Another instance of Derby may have already booted the database D:\workspace\bbossgroups-3.5\bboss-mvc\database\cimdb.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	... 46 more
Caused by: ERROR XSDB6: Another instance of Derby may have already booted the database D:\workspace\bbossgroups-3.5\bboss-mvc\database\cimdb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source)
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source)
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source)
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source)
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source)
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source)
	... 46 more

<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>BBOSS-MVC</display-name>
	<listener>
		<description><![CDATA[应用销毁监听器：
		在应用销毁之前调用系统shutdown 回调函数，前提是所有的shutdown回调函数
		是通过以下方法注册：
		BaseApplicationContext.addShutdownHook(new Runnable(){

				@Override
				public void run() {
					
					try {
						stop();
					

					} catch (Throwable e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}});]]>
		
	</description>
		<listener-class>org.frameworkset.web.listener.ApplicationLifeListener</listener-class>
	</listener>
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>com.frameworkset.common.filter.CharsetEncodingFilter</filter-class>
		<init-param>
			<param-name>RequestEncoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>ResponseEncoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>mode</param-name>
			<param-value>0</param-value>
		</init-param>
		<init-param>
			<param-name>checkiemodeldialog</param-name>
			<param-value>true</param-value>
		</init-param>

	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.page</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.ajax</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/rest/*</url-pattern>
	</filter-mapping>
	<filter>

		<filter-name>tokenFilter</filter-name>
		<filter-class>org.frameworkset.web.token.TokenFilter</filter-class>

		<!-- 防止跨站请求过滤器相关参数开始 ，与安全认证过滤器结合使用 -->
		<!-- 防止跨站请求过滤器相关参数 bboss防止跨站请求过滤器的机制如下：采用动态令牌和session相结合的方式产生客户端令牌，一次请求产生一个唯一令牌    
8.            令牌识别采用客户端令牌和服务端session标识混合的方式进行判别，如果客户端令牌和服务端令牌正确匹配，则允许访问，否则认为用户为非法用户并阻止用户访问并跳转到    
9.            tokenfailpath参数对应的地址，如果没有指定直接响应403错误。 令牌存储机制通过参数tokenstore指定，包括两种，内存存储和session存储，默认为session存储，当令牌失效（匹配后立即失效，或者超时失效）后，系统自动清除失效的令牌；采用session方式    
10.            存储令牌时，如果客户端页面没有启用session，那么令牌还是会存储在内存中。 令牌生命周期：客户端的令牌在服务器端留有存根，当令牌失效（匹配后立即失效，或者超时失效）后，系统自动清除失效的令牌；    
11.            当客户端并没有正确提交请求，会导致服务端令牌存根变为垃圾令牌，需要定时清除这些 垃圾令牌；如果令牌存储在session中，那么令牌的生命周期和session的生命周期保持一致，无需额外清除机制；    
12.            如果令牌存储在内存中，那么令牌的清除由令牌管理组件自己定时扫描清除，定时扫描时间间隔为由tokenscaninterval参数指定，单位为毫秒，默认为30分钟，存根保存时间由tokendualtime参数指定，默认为1个小时    
13.            可以通过enableToken参数配置指定是否启用令牌检测机制，true检测，false不检测，默认为false不检测 enableToken是否启用令牌检测机制，true    
14.            启用，false 不启用，默认为不启用 -->
		<init-param>
			<param-name>enableToken</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- 指定动态令牌校验失败跳转地址
		如果没有指定直接响应403错误-->
		<init-param>
		      <param-name>tokenfailpath</param-name>
		      <param-value>/login.jsp</param-value>
	    </init-param>
		<!-- 指定令牌存储机制，目前提供两种机制： mem：将令牌直接存储在内存空间中 session：将令牌存储在session中,如果对应的页面不存在session，则将token存储在内存中 
			默认存储在session中 -->
		<init-param>
			<param-name>tokenstore</param-name>
			<param-value>mem</param-value>
		</init-param>

		<!-- 内存令牌保留时间,默认为1小时，超过指定的时间，系统将自动清除超时的令牌，如果指定为-1将不检测 单位为毫秒 session中的令牌不受影响 -->
		<init-param>
			<param-name>tokendualtime</param-name>
			<param-value>3600000</param-value>
		</init-param>
		<!-- session中的令牌不受影响 内存令牌令牌超时检测时间间隔 单位为毫秒 默认为30分钟
			如果需要检测，那么只要令牌持续时间超过tokendualtime 对应的令牌将会被清除 -->
		<init-param>
			<param-name>tokenscaninterval</param-name>
			<param-value>1800000</param-value>
		</init-param>
		<!-- 防止跨站请求过滤器相关参数结束 -->
	</filter>


	<filter-mapping>
		<filter-name>tokenFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>tokenFilter</filter-name>
		<url-pattern>*.page</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>tokenFilter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>tokenFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>tokenFilter</filter-name>
		<url-pattern>*.ajax</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>tokenFilter</filter-name>
		<url-pattern>/rest/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>securityFilter</filter-name>
		<filter-class>org.frameworkset.web.interceptor.MyFirstAuthFilter</filter-class>
		<init-param>
			<param-name>patternsExclude</param-name>
			<param-value>
			/login.jsp
		</param-value>
		</init-param>

		<init-param>
			<param-name>redirecturl</param-name>
			<param-value>/login.jsp</param-value>
		</init-param>
		<!-- 安全认证过滤器AuthenticateFilter中增加checkPermission方法，应用系统可以继承实现这个方法来实现url权限检测功能，返回true表示有url访问权限，false表示无url访问权限，无权限时将跳转到authorfailedurl属性对应的提示页面 
			enablePermissionCheck属性可以屏蔽权限检测机制 -->
		<init-param>
			<param-name>enablePermissionCheck</param-name>
			<param-value>false</param-value>
		</init-param>

		<init-param>
			<param-name>permissionExclude</param-name>
			<param-value>
			/login.jsp,/authorfailed.jsp
		</param-value>
		</init-param>
		<!-- <init-param> -->
		<!-- <param-name>permissionInclude</param-name> -->
		<!-- <param-value> -->
		<!-- /login.jsp -->
		<!-- </param-value> -->
		<!-- </init-param> -->

		<init-param>
			<param-name>authorfailedurl</param-name>
			<param-value>/authorfailed.jsp</param-value>
		</init-param>
		<init-param>
			<param-name>preventDispatchLoop</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>


	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>*.page</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>*.ajax</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>/rest/*</url-pattern>
	</filter-mapping>
	<!-- Core dispatcher servlet -->
	<servlet>
		<servlet-name>mvcdispather</servlet-name>
		<servlet-class>org.frameworkset.web.servlet.DispatchServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/bboss-*.xml,/WEB-INF/conf/bboss-*.xml</param-value>
		</init-param>
		<init-param>
			<param-name>messagesources</param-name>
			<param-value>/WEB-INF/messages,/WEB-INF/messages1</param-value>
		</init-param>
		<init-param>
			<param-name>useCodeAsDefaultMessage</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvcdispather</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>mvcdispather</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>mvcdispather</servlet-name>
		<url-pattern>*.ajax</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>mvcdispather</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>mvcdispather</servlet-name>
		<url-pattern>*.page</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>mvcdispather</servlet-name>
		<url-pattern>/query/*</url-pattern>
	</servlet-mapping>

	<servlet>
		<display-name>cxf</display-name>
		<servlet-name>cxf</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.RPCCXFServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>cxf</servlet-name>
		<url-pattern>/cxfservices/*</url-pattern>
	</servlet-mapping>

	<servlet>
		<display-name>rmiload</display-name>
		<servlet-name>rmiload</servlet-name>
		<servlet-class>org.frameworkset.spi.remote.rmi.RMIRegistServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet>
		<display-name>RPCHttpServLet</display-name>
		<servlet-name>RPCHttpServLet</servlet-name>
		<servlet-class>org.frameworkset.spi.remote.http.RPCHttpServLet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>RPCHttpServLet</servlet-name>
		<url-pattern>*.rpc</url-pattern>
	</servlet-mapping>

	<!--exception page -->
	<!--<error-page> -->
	<!--<exception-type>java.lang.Exception</exception-type> -->
	<!-- Displays a stack trace -->
	<!--<location>/500.htm</location> -->
	<!--</error-page> -->

	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>

</web-app>

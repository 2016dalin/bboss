sourceSets {
    main {
        java {
             srcDirs 'src' exclude 'log4j.properties'
            srcDirs 'src-asm'
            srcDirs 'src-charset'
        }
        resources {
           // srcDirs 'src' exclude 'log4j.properties'           
        }
        compileClasspath = configurations.runtime
       
    }
    bboss_rt {
        java {
            srcDirs 'src-rt'
        }
        resources {
           srcDirs 'src-rt'         
        }
    }
}
project.tasks.compileJava.dependsOn(project(':bboss-velocity').tasks.publish)
 
dependencies {
	
	//test依赖bboss_rt和frameworkset_util的输出
   
    
    runtime (
            [group: 'org.bbossgroups', name: 'bboss-velocity', version: "${version}", transitive: false],
            [group: 'ant', name: 'ant', version: '1.6.2', transitive: false],
            [group: 'commons-lang', name: 'commons-lang', version: '2.6', transitive: false],
            [group: 'concurrent', name: 'concurrent', version: '1.3.2', transitive: false],
         
            [group: 'com.uwyn', name: 'jhighlight', version: '1.0', transitive: false],
            [group: 'bsh', name: 'bsh', version: '2.0b1', transitive: false],
            [group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.10',transitive: true],
            [group: 'log4j', name: 'log4j', version: '1.2.16', transitive: false],
            [group: 'oro', name: 'oro', version: '2.0.8', transitive: false]
    )
    
    compile (
    		 
            [group: 'servletapi', name: 'servletapi', version: '2.4', transitive: false],
            [group: 'javax.servlet', name: 'jsp-api', version: '2.0', transitive: false]
    )
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}


task rtJar(type: Jar) {
	baseName = 'bboss-rt'
	dependsOn compileBboss_rtJava
	from sourceSets.bboss_rt.output   
}
task rtsourceJar(type: Jar,dependsOn: 'rtJar') {
	baseName = 'bboss-rt'
    from sourceSets.bboss_rt.allJava
}

task rtJavadoc(type: Javadoc) {
    source sourceSets.bboss_rt.allJava
    destinationDir  file('build/docs/rtjavadoc')
}
 
task rtdocJar(type: Jar) {
	baseName = 'bboss-rt'
	classifier "doc"
	dependsOn rtJavadoc
	from rtJavadoc.destinationDir   
} 
task mainJavadoc(type: Javadoc) {
    source sourceSets.main.allJava
    classpath=  sourceSets.main.compileClasspath
}
task maindocJar(type: Jar) {
	baseName = 'bboss-util'
	classifier "doc"
	dependsOn mainJavadoc
	from mainJavadoc.destinationDir   
} 
    
publishing {
	 publications {
        mavenJava(MavenPublication) {
			artifact jar
			 
			 artifact sourceJar {
                classifier "sources"
            }
            
			 
			//artifact sourcesJar
			artifact maindocJar
        }
        
        rtmavenJava(MavenPublication) {
         	 artifactId 'bboss-rt'
			 artifact rtJar  
             artifact rtsourceJar {
                classifier "sources"
            }
            artifact  rtdocJar
			//artifact sourcesJar
			//artifact rtjavadocJar 
        }
        
    }
     repositories {
         mavenLocal()
    } 
}

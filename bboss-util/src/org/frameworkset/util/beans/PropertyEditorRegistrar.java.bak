/*
 *  Copyright 2008 biaoping.yin
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.frameworkset.util.beans;

import org.frameworkset.util.beans.BeanWrapper;
import org.frameworkset.util.beans.PropertyEditorRegistry;

/**
 * <p>Title: PropertyEditorRegistrar.java</p> 
 * <p>Description: </p>
 * <p>bboss workgroup</p>
 * <p>Copyright (c) 2008</p>
 * @Date 2010-10-16
 * @author biaoping.yin
 * @version 1.0
 */
public interface PropertyEditorRegistrar {
	
	/**
	 * Register custom {@link java.beans.PropertyEditor PropertyEditors} with
	 * the given <code>PropertyEditorRegistry</code>.
	 * <p>The passed-in registry will usually be a {@link BeanWrapper} or a
	 * {@link org.springframework.validation.DataBinder DataBinder}.
	 * <p>It is expected that implementations will create brand new
	 * <code>PropertyEditors</code> instances for each invocation of this
	 * method (since <code>PropertyEditors</code> are not threadsafe).
	 * @param registry the <code>PropertyEditorRegistry</code> to register the
	 * custom <code>PropertyEditors</code> with
	 */
	void registerCustomEditors(PropertyEditorRegistry registry);

}

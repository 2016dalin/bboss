 apply plugin: 'war'
   
  if(enable_gretty.equals("true"))
  {
  
     apply plugin: 'org.akhikhl.gretty'
  
     gretty {
	    httpPort = 80
	   
	    contextPath = '/bboss-websocket'
	    jvmArgs = ['-Xmx1024M', '-XX:PermSize=128M', '-XX:MaxPermSize=256M']
	  //  servletContainer = 'jetty7'
	  
	  }
  } 
sourceSets {
    main {
        java {
            srcDirs 'src'
        }
        resources {

        }
        //compileClasspath = configurations.providedCompile +configurations.compile
    }
    test {
        java {
            srcDirs 'test'
        }
        
    }
}

/**
jar {
    classifier = "all"
}*/

project.tasks.compileJava.dependsOn(project(':bboss-mvc').tasks.install)
dependencies {
   

   
    compile  (
			
			[group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.7.4',transitive: false],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.7.4',transitive: false],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.4',transitive: false],
            [group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.7.4',transitive: false],
             [group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.10',transitive: true],
             [group: 'cglib', name: 'cglib-nodep', version: '3.1', transitive: false],
             [group: 'org.ow2.asm', name: 'asm', version: '5.0.3', transitive: false],
           [group: 'com.bbossgroups', name: 'bboss-mvc', version: "${version}", transitive: false],
           [group: 'com.bbossgroups', name: 'bboss-schedule', version: "${version}", transitive: false],
             [group: 'com.bbossgroups', name: 'bboss-persistent', version: "${version}", transitive: false],
           [group: 'com.bbossgroups', name: 'bboss-core', version: "${version}", transitive: false],
           [group: 'com.bbossgroups', name: 'bboss-util', version: "${version}", transitive: false],
           //[group: 'com.bbossgroups.security', name: 'bboss-security', version: "${version}", transitive: false],
           [group: 'com.bbossgroups', name: 'bboss-taglib', version: "${version}", transitive: false],
           [group: 'log4j', name: 'log4j', version: '1.2.16', transitive: false],          
            [group: 'oro', name: 'oro', version: '2.0.8', transitive: false],         
            [group: 'commons-logging', name: 'commons-logging', version: '1.1', transitive: false],
            
    )
    providedCompile (
    	[group: 'javax.servlet', name: 'javax.servlet-api', version: "3.0.1", transitive: false],
    	[group: 'org.glassfish.tyrus.bundles', name: 'tyrus-standalone-client', version: "1.9", transitive: false],
    	 [group: 'servletapi', name: 'servletapi', version: '2.4', transitive: false],
            [group: 'javax.servlet', name: 'jsp-api', version: '2.0', transitive: false]
    )
   
    
     
}
    
 

war {
    //from 'WebRoot'
    // adds a file-set to the root of the archive
    //webInf { from 'WebRoot/WEB-INF' } // adds a file-set to the WEB-INF dir.
    //classpath configurations.compile-configurations.providedCompile // adds a configuration to the WEB-INF/lib dir.
    //webXml = file('WebRoot/WEB-INF/web.xml') // copies a file to WEB-INF/web.xml
}

task sourcesJar(type: Jar) {
	classifier = "sources"
	from sourceSets.main.allJava
}

task javaDocJar(type: Jar, dependsOn: javadoc) {
	classifier = "javadoc"
	from javadoc.destinationDir
}
publishing {
    publications {
        mavenJava(MavenPublication) {
        	from components.java
			artifact sourcesJar
			artifact javaDocJar
            artifact war
        }
    }
    repositories {
        mavenLocal()
    }
}
webAppDirName = 'WebRoot'  